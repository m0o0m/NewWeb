/////////////////////////////////////////////////////////////////
////
////			后台服务通讯
////
/////////////////////////////////////////////////////////////////
package ProtoCmd.Service;

// 枚举定义通讯协议号
enum ServiceCmd
{
	SC_BEGIN 		= 11;
	SC_KICK_USER 		= 12;		//踢玩家下线
	SC_QUERY_USER 		= 13; 		//查询个人信息
	SC_FREEZE_USER 		= 14;		//玩家封号与解封
	SC_SEND_SYSMAIL 	= 15;		//发送系统邮件
	SC_SERVER_STOP  	= 16;		//服务器维护安全关服
	SC_QUERY_ONLINEUSER 	= 17;		//查询在线玩家列表
	SC_QUERY_USEROPERHIS	= 18;		//查询玩家操作历史记录
	SC_QUERY_SERVERSTATUS	= 19;		//查询服务器状态
	SC_SEND_ANNOUNCEMENT	= 20;		//发送公告
	SC_BAN_SPEAK		= 21;		//禁言
	SC_ADD_GOLD		= 22;		//系统加钱(在线加钱,临时处理)
	SC_QUERY_INTERNALLOGIN	= 23;		//查询是否打开内部登录
	SC_SET_INTERALLOGIN	= 24;		//设置内部登录模式
	SC_SEND_ITEMMAIL	= 25;		//发送物品邮件(包含金币,五币,礼物,权贵等)
	SC_QUERY_FISH		= 26;		//查询养鱼
	SC_BAN_LOGIN_IP		= 27;		//封登录IP
	SC_REG_IP		= 28;		//设置同IP下的注册数
	SC_SELECT_TEXAS_POT	= 29;		//查询德州彩池金币数
	SC_OPERTOR_TEXAS_POT	= 30;		//增加或者减少德州彩池金币数
	SC_SELECT_REDEVENLOPE_Q = 31;		//抢红包开关查询请求
	SC_OPERTOR_REDEVENLOPE_Q= 32;		//抢红包开关查询请求
	SC_BAN_LOGIN_MAC	= 33;		//封登录MAC地址
	SC_RESET_SAFEBOXPWD	= 34;		//重置保险箱密码
	SC_POT_SWITCH 		= 35;		//宝盆开关
	SC_SELECT_SCALE_POT	= 36;		//查询中发白彩池金币数
	SC_OPERTOR_SACLE_POT	= 37;		//增加或者减少中发白彩池金币数
	SC_GET_POT_SWITCH 	= 38;		//获得宝盆开关
	SC_CLUB_USERMODE	= 39;		//设置俱乐部会员模式
	SC_SELECT_IPSTATUS_Q 	= 40;		//ip状态开关查询请求
	SC_OPERTOR_IPSTATUS_Q	= 41;		//ip状态开关操作请求
	SC_SET_IP_WHITELIST	= 42;		//设置IP白名单
	SC_CANCEL_CLUB		= 43;		//取消俱乐部
	SC_SET_ROBOT_POT 	= 44;		//设置机器人彩池
	SC_BELAND_CLUB      = 45;		//绑定俱乐部
	SC_ROBOT_QUERY      = 46;       //查询机器人状况
	SC_ROBOT_MODIFY     = 47;       //更新机器人配置
	SC_ROBOT_LOGIN      = 48;       //机器人登录
	SC_SET_ZFBPOT_OPEN = 50;		//中发白奖池开关
	SC_USER_STATE		= 51;		//玩家在线状态
	SC_SET_TEXPROPOT_OPEN = 52;		//百人德州大彩池开关
	SC_SELECT_TEXPRO_POT	= 53;		//查询百人德州大彩池金币数
	SC_OPERTOR_TEXPRO_POT	= 54;		//增加或者减少百人德州大彩池金币数
	
	SC_MODULE_SWITCH = 55;
	SC_CLIENT_GAME_SWITCH = 56;
	SC_SET_INDEBATED_REBATE_OPEN = 59;		//感恩充值返利开关
    SC_NTF_UPDATE_POPUPCONTROL = 60;	//提示更新弹窗配置
  
	
	SC_MOBILE_SWITCHS = 61;				//移动设备登陆注册开关
	SC_MOBILE_SWITCH_OPERATOR = 62;		//修改移动设备登陆注册开关信息
	SC_SET_Herocraft_Twice_OPEN = 64;		//翻翻乐开关
	SC_SET_MIDAUTUMN_FESTIVAL_OPEN = 63;		//中秋返利开关
	SC_NTF_UPDATE_DBPVPCFG = 65;		//提示更新PVP配置
	SC_NTF_UPDATE_ARCADEGAMESTOCK = 66;//提示更新PVP库存
	SC_NTF_UPDATE_SHUIHUPOT = 67;//提示更新PVP彩池
        SC_FruiteBigPot = 68;			//提示更新水果机彩池
	SC_SET_BACCARATPOT_OPEN = 69;		    //百人百家乐大彩池开关
	SC_SELECT_BACCARAT_POT	= 70;		//查询百人百家乐大彩池金币数
	SC_OPERTOR_BACCARAT_POT	= 71;		//增加或者减少百人百家乐大彩池金币数
	SC_TOTAL = 200;
}

// 不用的
// SC_QUERY_USER = 13 
// SC_QUERY_USEROPERHIS = 18
// SC_ADD_GOLD = 22 
// SC_SELECT_SCALE_POT = 36
// SC_OPERTOR_SACLE_POT = 37
// SC_SET_ROBOT_POT = 44
// SC_QUERY_FISH

enum CenterCmd
{
	CS_BEGIN	 	= 11;
	CS_CONNECT_ERROR	= 12;		//连接错误
	CS_ACCOUNT_ERROR 	= 13;		//账号错误
	CS_QUERY_UESR	 	= 14;		//返回查询
	CS_SERVER_STOP   	= 15;		//返回关服
	CS_KICK_USER	 	= 16;		//返回踢人
	CS_FREEZE_USER	 	= 17;		//返回封号
	CS_QUERY_ONLINEUSER 	= 18;		//返回在线列表
	CS_QUERY_USEROPERHIS	= 19;		//返回玩家操作历史记录
	CS_SEND_SYSMAIL		= 20;		//发送系统邮件
	CS_QUERY_SERVERSTATUS	= 21;		//返回服务器状态
	CS_SEND_ANNOUNCEMENT	= 22;		//公告返回
	CS_QUERY_INTERNALLOGIN  = 23;		//查询是否打开内部登录
	CS_SET_INTERALLOGIN	= 24;		//设置内部登录模式
	CS_SEND_ITEMMAIL	= 25;		//发送物品邮件返回
	CS_QUERY_FISH		= 26;		//返回养鱼
	CS_BAN_SPEAK		= 27;		//返回禁言
	CS_BAN_LOGIN_IP		= 28;		//封登录IP
	CS_REG_IP		= 29;		//设置同IP下的注册数
	CS_SELECT_TEXAS_POT	= 30;		//返回德州大彩池金币数
	CS_OPERTOR_TEXAS_POT	= 31;		//返回增加或者减少德州彩池金币数
	CS_SELECT_REDEVENLOPE_P = 32;		//抢红包开关查询响应
	CS_OPERTOR_REDEVENLOPE_P= 33;		//抢红包开关配置响应
	CS_BAN_LOGIN_MAC	= 34;		//封登录MAC地址
	CS_RESET_SAFEBOXPWD	= 35;		//重置保险箱密码
	CS_SELECT_SCALE_POT	= 36;		//返回中发白大彩池金币数
	CS_OPERTOR_SCALE_POT	= 37;		//返回增加或者减少中发白彩池金币数
	CS_POT_SWITCH_RESP	= 38;		//宝盆设置开关返回
	CS_GET_POT_SWITCH_RESP 	= 39;    	//获得宝盆开关返回
	CS_CLUB_USERMODE	= 40;		//设置俱乐部会员模式
	CS_SELECT_IPSTATUS 	= 41;		//ip状态开关查询响应
	CS_OPERTOR_IPSTATUS	= 42;		//ip状态开关操作响应
	CS_SET_IP_WHITELIST	= 43;		//设置IP白名单
	CS_CANCEL_CLUB		= 44;		//取消俱乐部
	CS_SET_ROBOT_POT 	= 45;		//设置机器人彩池
	CS_BELAND_CLUB		= 46;
	CS_ROBOT_STATU      = 47;       //机器人状态
	C2S_ROBOT_ERRMSG    = 48;       //机器人返回错误信息
	CS_SET_ZFBPOT_OPEN  = 50;		//中发白奖池开关
	CS_USER_STATE		= 51;		//玩家在线状态
	CS_SET_TEXPROPOT_OPEN  = 52;		//百人德州大彩池开关
    CS_SELECT_TEXPROPOT_POT	= 53;		//返回百人德州大彩池金币数
	CS_OPERTOR_TEXPROPOT_POT	= 54;		//返回增加或者减少百人德州大彩池金币数
	
	
	CS_MODULE_SWITCH = 55;
	CS_CLIENT_GAME_SWITCH = 56;
	CS_SET_INDEBATED_REBATE_OPEN = 59;		//感恩充值返利开关
    CS_NTF_UPDATE_POPUPCONTROL = 60;	//提示更新弹窗配置
	CS_MOBILE_SWITCHS = 61;				//移动设备登陆注册开关
	CS_MOBILE_SWITCH_OPERATOR = 62;		//修改移动设备登陆注册开关信息
    CS_SET_Herocraft_Twice_OPEN = 64;		//翻翻乐开关
	CS_SET_MIDAUTUMN_FESTIVAL_OPEN = 63;		//中秋返利开关
    CS_NTF_UPDATE_DBPVPCFG = 65;	//提示更新PVP配置
	CS_NTF_UPDATE_ARCADEGAMESTOCK = 66;//提示更新PVP库存
	CS_NTF_UPDATE_SHUIHUPOT = 67;//提示更新PVP彩池
    CS_FruiteBigPot = 68;						//请求修改水果机彩池

	
	CS_SET_BACCARART_OPEN = 69;					//百人百家乐大彩池开关
	CS_SELECT_BACCARAT_POT = 70;				//返回百人百家乐大彩池金币数
	CS_OPERTOR_BACCARAT_POT  = 71;				//返回增加或者减少百人百家乐大彩池金币数
	
	CS_TOTAL	 	= 100;
}

message BGSetZfbPotOpenReq
{
	optional int32 isOpen = 1;//是否开启
}

message BGSetZfbPotOpenRes
{
	optional int32 suc = 1;//是否设置成功
	optional int32 currStatus = 2; //1是开，0是关
}

message GetPotSwitchResp
{
	required uint32 switch = 1; //0关闭，1打开
}

message PotSwitchResp
{
	required uint32 result = 1; //0成功，1失败
}

message PotSwitch
{
	required uint32 tableid = 1;
	required uint32	config	= 2;
}

message Service_Test_S
{
	required string szAccount = 1;
	required bool	suc	  = 2;
}

// 结构定义通讯协议内容

///	请求踢人(暂时只有请求没有应答，玩家可能在不同网关上)
message Service_Kick_C
{
	required uint32 dwUserID = 1;	//	ID
}

message Service_Kick_S
{
	required bool	suc	= 1;	//
}

///	查询玩家信息
message Service_Query_C
{
	required string	szAccount = 1;	//帐户名字 
}

///	服务器反馈查询玩家信息
message Service_Query_S
{
	required uint32	dwUserID 	= 1;	//ID
	required string szAccount 	= 2;	//帐户
	required string szNickName 	= 3;	//昵称
	required string	szTelNum 	= 4;	//手机号码
	required string	szEmail		= 5;	//邮箱
	optional bool	isOnline	= 6;	//在线状态
	required bool	isFreeze	= 7;	//帐户是否冻结
	required string	szTrueName	= 8;	//真实姓名
	required string	szIdentity	= 9;	//身份证
	required uint32	sex		= 10;	//性别
	required uint32	dwAgentID	= 11;	//代理商ID
	required string	szCreateTime	= 12;	//创建时间
}

///	玩家封号
message	Service_Freeze_C
{
	required uint32 dwUserID  = 1;	//帐户ID
	required uint32	dwFreeze  = 2;	//0是解封 1~n 是封号(1 您的注册账号已超3个 2 查询到您有刷游戏币)
	required uint32	dwMinute  = 3;	//分钟 (永久传10年过来)
}

message Service_Freeze_S
{
	required bool	suc = 1;	//返回冻结
}

///	发送系统邮件
message Service_Send_SysMail_C
{
	required string szTitle   = 1;	//标题
	required string szContext = 2;	//内容
}

///	安全关服(只有命令没有结构部分
message Service_Send_CloseServer
{
	required bool close = 1;	//true 关 false 开
}


///	查询返回服务器状态
message Service_Query_ServerStatus_S
{
	required bool close = 1;	//true 关 false 开
}

// 在线玩家列表请求
message	Service_Query_OnlineUser_C
{
	required uint32 dwPageIndex = 1;	// 页面ID(启始1开始)
	required uint32 dwShowNum   = 2;	// 单个页面显示数量
}

message Service_OnlineUserInfo
{
	required string	strAccount 	= 1;	
	required uint32	dwUserID   	= 2;
	required string	strIP	   	= 3;
	required string strLoginTime	= 4;
}

//  在线玩家列表请求返回
message Service_Query_OnlineUser_S
{
	required uint32 startIndex = 1;		// 启始的记录索引总编号
	required uint32	showNum = 2;		// 现实数目
	required uint32 page = 3;		// 当前页面
	required uint32 pageTotal = 4;		// 总页面
	repeated Service_OnlineUserInfo	list = 5;	// 玩家信息数组
}

//  后台请求用户操作历史记录
message Service_Query_UseOperHis_C
{
	required uint32	dwUserID    = 1;	//用户ID
	required uint32 dwPageIndex = 2;	// 页面ID(启始1开始)
	required uint32 dwShowNum   = 3;	// 单个页面显示数量
}

message Service_UserOperHisInfo
{
	required string strTime = 1;		//时间
	required string content = 2;		//记录内容
}

//  服务器返回用户操作历史记录
message Service_Query_UseOperHis_S
{
	required uint32 dwUserID = 1;				// 用户ID
	required uint32 startIndex = 2;				// 启始的记录索引总编号
	required uint32	showNum = 3;				// 现实数目
	required uint32 page = 4;				// 当前页面
	required uint32 pageTotal = 5;				// 总页
	repeated Service_UserOperHisInfo listInfo = 6;		// 记录数组
}

//  系统公告
message Service_Send_AnnounceMent_C
{
	required string	content = 1;				// 公告内容(200汉字)
	required uint32 dwRepeat = 2;				// 重复次数
	required uint32 dwInterval = 3;				// 间隔时间(单位秒)
}

// 禁言
message Service_BanSpeak_C
{
	required uint32 dwUserID  = 1;	//帐户ID
	required uint32 dwBanSpeak = 2;	//0 是解封 1是恶意刷屏 2 发布恶意辱骂消息 3发布虚假信息 4 言论与国家法律法规冲突
	required uint32	minute	  = 3;	//分钟 （永久传10年过来）
}
// 禁言返回
message Service_BanSpeak_S
{
	required bool	suc = 1;	//是否成功
}

// 在线加钱
message Service_OnlineAddGold_C
{
	required uint32 dwUserID = 1;	//角色ID
	required uint32 dwAddGold = 2;	//加的钱
}

// 加钱返回
message Service_OnlineAddGold_S
{
	required bool suc = 1;		//是否成功
}

// 后台查询内部登录模式 
// 服务器返回内部登录模式
message Service_QueryInternalLogin_S
{
	required bool isOpen = 1;	// true说明是打开状态 false是没有打开
}

// 后台设置内部登录模式
message Service_SetInternalLogin_C
{
	required bool bOpen = 1;	// true 说明是要打开 false 说明是要关闭
}

// 后台设置内部登录模式返回
message Service_SetInternalLogin_S
{
	required bool isOpen = 1;	// true说明是打开状态 false是没有打开
}

// 后台物品邮件(发送物品邮件(包含金币,五币,礼物,权贵等))
message Service_ItemMail_C
{
	repeated uint32 userID = 1;	// 角色ID(最多10个)
	required string title = 2;	// 标题(30汉字内)
	required string context = 3;	// 内容(50汉字内)
	optional uint32 itemType = 4;	// 物品类型 (1 金币 2 五币 3积分 4 礼物 5 权贵 6 宝石)
	optional uint32 itemValue = 5;	// 物品的数值 或者 ID (货币就是数值 物品就是ID)
	optional uint32 itemNum	= 6;	// 数量
	optional bool isGlobal = 7;		// 是不是全局邮件
	optional int32 award_type = 8;	// 奖励类型（如果此值有值，服务器将此值写入流水记录类型）
}

// 物品邮件
message Service_ItemMail_S
{
	required bool suc = 1;		// 是否成功
}

//
message Service_Fish_C
{
	required uint32 userID = 1;	// 角色ID
}

message FishInfo
{
	required string date = 1;	// 日期
	required uint32 itemID = 2;	// 物品ID
	required string name = 3;	// 物品名称
	required uint32 giveID = 4;	// 给予者的ID
}

//
message Service_Fish_S
{
	required uint32 userID = 1;	// 角色ID
	repeated FishInfo fishList = 2;	// 鱼列表
}

//
message Service_BanIP_C
{
	required string ip	= 1;	//ip地址
	required bool isBan	= 2;	//是封还是解
}

message Service_BanIP_S
{
	required bool	suc = 1;	//是否成功
}

message Service_RegIP_C
{
	required string ip	=1;	//IP地址
	required uint32 total	=2;	//可以注册的总数
	required string content =3;	//描述原因(50 汉字限制)
}

message Service_RegIP_S
{
	required bool	suc	=1;	//是否成功
}

//////////////////////////////////////////////////////////////////////////////德州大彩池
message TexasPot_Select_S		//CS_SELECT_TEXAS_POT
{
	required uint64 ChipNum	=1;	//彩池金币数量
}

message TexasPot_Operator_C		//SC_OPERTOR_TEXAS_POT
{
	required uint32 opType	   =1;	//操作类型 1增加  2减少
	required uint64 opValue	   =2;	//要操作 增加或者减少的数
	required string	strContent =3;	//修改原因
}

message TexasPot_Operator_S		//CS_OPERTOR_TEXAS_POT
{
	required uint32 opType	=1;	//操作类型 1增加  2减少
	required bool 	suc	=2;	//是否成功 true为成功
}
////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////中发白抢红包
message REDEVENLOPE_SELECT_S		    //CS_SELECT_REDEVENLOPE_P 	= 32;
{
	required bool state   = 1;	    //状态开关 true:开  false：关
}

message REDEVENLOPE_OPERATOR_C		    //SC_OPERTOR_REDEVENLOPE_Q 	= 32;
{
	required bool state   = 1;	    //配置的状态开关 true:开  false：关
}

message REDEVENLOPE_OPERATOR_S		    //CS_OPERTOR_REDEVENLOPE_P 	= 33;
{
	required bool state   = 1;	    //配置的状态开关 true:开  false：关
    	required bool bsucc   = 2;	    //成功标志 true成功
}
////////////////////////////////////////////////////////////////////////////////////
message Service_BanMac_C
{
	required string macAddr	= 1;	//MAC地址
	required bool isBan	= 2;	//是封还是解
}

message Service_BanMac_S		//CS_BAN_LOGIN_MAC
{
	required bool suc	= 1;	//是否成功
}

message Service_ResetSafePwd_C		//重置保险箱密码	SC_RESET_SAFEBOXPWD
{
	required uint32 dwUserID	= 1;	// 角色ID
}

message Service_ResetSafePwd_S		//重置保险箱密码返回	CS_RESET_SAFEBOXPWD
{
	required bool suc		= 1;	// 是否成功
}
//////////////////////////////////////////////////////////////////////////////中发白大彩池
message Scale_Select_S			//CS_SELECT_SCALE_POT
{
	required uint64  ChipNum	=1;	//彩池金币数量
}

message Scale_Operator_C		//SC_OPERTOR_SACLE_POT
{
	required uint32 opType	   =1;	//操作类型 1增加  2减少
	required uint64 opValue	   =2;	//要操作 增加或者减少的数
	required string	strContent =3;	//修改原因
}

message Scale_Operator_S		//CS_OPERTOR_SCALE_POT
{
	required uint32 opType	=1;	//操作类型 1增加  2减少
	required bool 	suc	=2;	//是否成功 true为成功
}
//////////////////////////////////////////////////////////////////////////////

message Service_ClubUserMode_C
{
	required uint32 clubID = 1;	//俱乐部的ID
}

message Service_ClubUserMode_S
{
	required bool suc = 1;		//是否成功 true为成功
}

message Beland_Club_C
{
	required uint32 clubID = 1;	//俱乐部的ID
	required uint32 dwUserID = 2;
}

message Beland_Club_S
{
	required bool suc = 1;		//是否成功 true为成功
}

////////////////////////////////////////////////////////////////////////////////////ip状态开关
message IPSTATUS_SELECT_S		    //CS_SELECT_IPSTATUS 	= 41
{
	required bool state   = 1;	    //状态开关 true:开  false：关
}

message IPSTATUS_OPERATOR_C		    //SC_OPERTOR_IPSTATUS_Q 	= 40
{
	required bool state   = 1;	    //配置的状态开关 true:开  false：关
}

message IPSTATUS_OPERATOR_S		    //CS_OPERTOR_IPSTATUS	= 42;
{
	required bool state   = 1;	    //配置的状态开关 true:开  false：关
    	required bool bsucc   = 2;	    //成功标志 true成功
}

message IPWHITE_C			    //SC_SET_IP_WHITELIST
{
	required string	ip	= 1;
	required bool	add	= 2;	    //ture 是添加 false 是删除
}

message IPWHITE_S			    //CS_SET_IP_WHITELIST
{
	required string ip	= 1;	    //IP 地址
	required bool	add	= 2;	    //true 是添加 false 是删除
	required bool	suc	= 3;	    //true 是成功
}

message CANCEL_CLUB_C			    //
{
	required uint32 dwUserID = 1;	    // 取消俱乐部ID
}

message CANCEL_CLUB_S
{
	required bool suc	= 1;	    // 是否成功
}

message ROBOT_POT_C
{
	required double pot 	= 1;	    // 池
	required double stand   = 2;	    // 标准
	required uint32 gameID  = 3;	    // 游戏类型
}

message ROBOT_POT_S
{
	required bool suc = 1;		    //
}
////////////////////////////////////////////////////////////////////百人德州大彩池开关
message BGSetTexProPOTOpenReq
{
	optional int32 isOpen = 1;//是否开启
}

message BGSetTexProPOTOpenRes
{
	optional int32 suc = 1;//是否设置成功
	optional int32 currStatus = 2; //1是开，0是关
}
//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////百人德州大彩池
message TexPro_Select_S			//
{
	required uint64  ChipNum	=1;	//彩池金币数量
}

message TexPro_Operator_C		//
{
	required uint32 opType	   =1;	//操作类型 1增加  2减少
	required uint64 opValue	   =2;	//要操作 增加或者减少的数
	required string	strContent =3;	//修改原因
}

message TexPro_Operator_S		//
{
	required uint32 opType	=1;	//操作类型 1增加  2减少
	required bool 	suc	=2;	//是否成功 true为成功
}
//////////////////////////////////////////////////////////////////////////////模块开关


message Module_Switch_C
{
	required uint32 module = 1; // 模块
	required uint32 opend = 2;	// 状态
}

message Module_Switch_S
{
	required bool suc = 1;		// 是否成功
	required uint32 opend = 2;	// 状态
}


message ClientGame_Switch_C
{
	required uint32 gameID = 1;		//
	repeated uint32 platOpen = 2;	// 0 WEB 1 IOS 2 android
}

message ClientGame_Switch_S
{
	required bool suc = 1;
	repeated uint32 platOpen = 2;	// 0 WEB 1 IOS 2 android
}

/////////////////////////////////////////////////////////////////////////////感恩返利
message BGSetIndebatedRebateOpenReq
{
	optional int32 isOpen = 1;//是否开启
}

message BGSetIndebatedRebateOpenRes
{
	optional int32 suc = 1;//是否设置成功
	optional int32 currStatus = 2;
}



//更新弹窗配置响应
message PopUpControl_S
{
	optional bool suc = 1;
}


///////////////////////////////////////////////////////////////////后台登录注册开关
message MobileSwitch
{
	optional int32 id =	1;					// 服务器自动生成
	optional int32 mobile_device = 2;		// 手机设备(1 苹果 2 安卓)
	optional int32 agent = 3;				// 渠道
	optional string mobile_brand = 4;		// 手机品牌
	repeated int32 close_login_type = 5;	// 关闭的登陆类型 -1、所有 QQ、1 微信、2 游客、3 ID、4 五一五账号、5 第三方渠道	
	repeated int32 close_register_type = 6;	// 关闭的注册类型 -1、所有 QQ、1 微信、2 游客、3 ID、4 五一五账号、5 第三方渠道	
	repeated string mobile_model = 7;		// 关闭的手机型号, all_model 为所有型号
}	

//移动设备登陆注册开关
message MobileSwitchs_S
{
	repeated MobileSwitch mobile_switchs = 1;	// 移动设备注册登陆开关列表 	
	optional bool suc = 2;
}

//修改移动设备登陆注册开关信息
message MobileSwitchOperator_C
{
	optional int32 operator_type = 1;			// 操作类型（1添加，2删除）
	optional MobileSwitch mobile_switch = 2;	// 删除时只填id 	
} 

//增加移动设备登陆注册开关信息
message MobileSwitchOperator_S
{
	optional int32 operator_type = 1;			// 操作类型（1添加，2删除）
	optional MobileSwitch mobile_switch = 2;	 
	optional bool suc = 3;	
} 


/////////////////////////////////////////////////////////////////////////////翻翻乐开关
message BGSetHerocraftTwiceOpenReq
{
	optional int32 isOpen = 1;//是否开启
}

message BGSetHerocraftTwiceOpenRes
{
	optional int32 suc = 1;//是否设置成功
	optional int32 currStatus = 2;
}


///////////////////////////////////////////////////////////////中秋返利开关
message BGSetMidautumnFestivalOpenReq
{
	optional int32 isOpen = 1;//是否开启
}

message BGSetMidautumnFestivalOpenRes
{
	optional int32 suc = 1;//是否设置成功
	optional int32 currStatus = 2;
}
////////////////////////////////////////////////////////////////水浒传，水果机协议
//更新PVP配置响应
message DbPvpCfg_S
{
	optional bool suc = 1;
}

//更新PVP库存响应
message ArcadeGameStock_C
{
	optional int32 mod = 1;
	optional int32 type = 2;//1为修改库存值
	optional int32 value = 3;
}


//更新PVP库存响应
message ArcadeGameStock_S
{
	optional bool suc = 1;
}

message ShuiHuPot_C
{
	optional int32 mod = 1;
	optional int32 type = 2;//1为修改彩池值
	optional int32 value = 3;
}


//更新PVP水浒彩池响应
message ShuiHuPot_S
{
	optional bool suc = 1;
}



//更新修改水果机彩池
message FruiteBigPot_C
{
	optional int32 mod = 1;
	optional int32 type = 2;	//1为修改彩池值
	optional int32 value = 3;
}

//更新水果机彩池
message FruiteBigPot_S
{
	optional bool suc = 1;
}

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////百家乐大彩池
message BGSetBaccaratPOTOpenReq
{
	optional int32 isOpen = 1;//是否开启
}

message BGSetBaccaratPOTOpenRes
{
	optional int32 suc = 1;//是否设置成功
	optional int32 currStatus = 2; //1是开，0是关
}

message Baccarat_Select_S
{
	required uint64 ChipNum = 1; //彩池金币数量
}

message Baccarat_Operator_C
{
	optional uint32 opType	   =1;	//操作类型 1增加  2减少
	optional uint64 opValue	   =2;	//要操作 增加或者减少的数
	optional string	strContent =3;	//修改原因
}

message Baccarat_Operator_S
{
	optional uint32 opType	=1;	//操作类型 1增加  2减少
	optional bool 	suc	=2;		//是否成功 true为成功
}

///////////////////////////////////////  机器人协议 ///////////////////////////
enum ModuleType {
	ALL = 0; //全部信息
	SYSTEM = 1; // 系统信息 cpu、mem
	OVERVIEW = 2; // 总览 各游戏总人数
	MODULE_MAX = 2;

	GAME_TYTPE_BEGIN = 100;
	TEXAS = 100; // 德州扑克
	ZFB = 101; // 中发百
	CARS = 102; // 奔驰宝马
	ZODIAC = 103; //十二生肖
	TEXAS_EX = 104; // 百人德州 （暂无）
	GAME_TYPE_MAX = 104;
}

// 后台 => 服务器
// requests
// SC_ROBOT_QUERY = 46
message QueryRobotStatu
{
	optional uint32 module_type = 1; // enum ModuleType
}

// SC_ROBOT_MODIFY = 47
message ModifyRobotConfig
{
	required uint32 game_type = 1; // [TEXAS, GAME_TYPE_MAX]
	repeated uint32 limit = 2; // 按照表里的时间段，从左到右枚举
	optional uint32 is_bet = 3; // 是否下注
}

// SC_ROBOT_LOGIN = 48
message LoginRequest
{
	required uint32 game_type = 1; // [TEXAS, GAME_TYPE_MAX]

	required uint32 login_frequency = 2; // 登录频率
	required int32 login_cnt = 3; // 登录人数
	optional uint32 strategy = 4; // 目前仅德州有用 enum Stragety

	enum Stragety {
		TEXAS_RANDOM_JOIN = 1; // 随机进桌
		TEXAS_QUICK_START = 2; // 快速开始
		TEXAS_NORMAL = 3; // 外网模式
	}
}
// 服务器 --> 后台
// responses
message GameStatu
{
	required uint32 game_type = 1; // ModuleType [TEXAS, GAME_TYPE_MAX]

	required uint32 player_cnt = 2; // 当前玩家人数
	repeated uint32 player_limit = 3; // 各时间段人数下限
	optional uint32 is_bet = 4; // 是否下注 [TEXAS忽略]
}

message GameOverView
{
	// 依次为[TEXAS, GAME_TYPE_MAX]范围内的玩家人数，后期可扩充。所有人数需后台自己相加
	repeated uint32 player_cnt = 2;
}

message SystemStatu
{
	required uint32 cpu_percent = 1; // cpu千分比
	required uint64 mem_used = 2; // 已用cpu byte
	required uint64 mem_total = 3; // 系统总内存 byte
	required uint64 flow_rate = 4; //流量
	required uint32 conn_cnt = 5; // 连接数
	required uint32 conn_limit = 6; // 总连接数
}

// CS_ROBOT_STATU = 47
message RobotStatus
{
	optional uint32 module_type = 1;
	repeated GameStatu game_statu = 2; // 1为 ALL 或 [TEXAS, GAME_TYPE_MAX]时读取
	optional GameOverView game_overview = 3; // 1为 ALL 或 OVERVIEW时读取
	optional SystemStatu system_statu = 4; // 1 为 ALL 或SYSTEM时读取
}

// C2S_ROBOT_ERRMSG = 48;
message ErrorMessage
{
	required string error_message = 1;
	// required uint32 error_code = 1;
	// enum ErrorCode {
	// 	OK;
	// 	ERR_NO_ACCOUNT = 1; // 机器人账号已用完，无法
	// }
}


//////////////////////////////////玩家在线状态//////////////////////////////////////////////
// 后台==>服务器
message UserStateReq
{
	optional int32 user_id = 1;
}

// 服务器==>后台
message UserStateRes
{
	optional int32 user_id = 1;
	optional int32 state = 2;		// 0：离线， 1在线， 2断线
	optional int32 room_id = 3;		// 房间id（0为在大厅）
	optional int32 room_type = 4;	// 房间类型（13中发白、14十二生肖、15德州、17奔驰宝马）
}










message UserScoreAward 
{
	optional uint32	tLastGetAwardTime = 1;			// 上一次领取的时间
	optional uint32	tFinalGetScoreTime = 2;			// 最后一次可以获取积分的时间
	optional uint32	tLastGetScoreTime = 3;			// 上一次可以领取奖励的时间
	optional int64	dwLastGetScore = 4;				// 上一次可以领取奖励的积分 昨日剩余可领取 + 昨日积分 * 返回比例   昨日剩余可领取
	optional int64	dwNowGetScore = 5;				// 今天获取积分的
}
message UserSign 
{
	optional int32	wConti = 1;						// 连续次数 最多7次
	optional uint32 tlastLoginTime = 2;				// 上次登录时间			给登录7天奖励用
	optional uint32 tSignLuckTime = 3;				// 上一次签到抽奖时间	给签到抽奖使用
	optional uint32 tSignAwardTime = 4;				// 上一次签到奖励时间
	optional int32	byStatus0 = 5;					// 1可领取  2已领取  3未到期  4已过期
	optional int32	byStatus1 = 6;					// 1可领取  2已领取  3未到期  4已过期
	optional int32	byStatus2 = 7;					// 1可领取  2已领取  3未到期  4已过期
}

message UserExData 
{
	optional int32	wMaxFriend = 1;					// 最大好友数量
	optional uint32 lastLoginTime = 2;				// 最后一次登录时间
	optional uint32 lastMoneyTime = 3;				// 上次打牌获取筹码的时间
	optional uint32  finalGetScoreTime = 4;			// 最后一次盈利筹码的时间
	optional int64 lastMoney = 5;					// 昨日最大盈利筹码
	optional int64 nowMoney = 6;					// 今天获取的多少钱
	repeated int32 maxCard = 7;						// 最大牌型(德州)

	repeated GameInfo listInfo = 8;					// 最大20个游戏
}

message GameInfo
{
	optional int32 GameID = 1;						// 游戏ID
	optional int64 dwWin = 2;						// 总赢的
	optional int32 dwTotal = 3;						// 总玩的局数
	optional int64 maxWinChip = 4;					// 最高一把赢取筹码
}

message SpellCardInfo 
{
	optional uint32 time = 1;
	optional uint32 join_times = 2;					// 参与次数
	optional uint32 win_times = 3;					// 拼中次数
	optional uint32 rob_times = 4;					// 抢到次数
	repeated uint32 getBox = 5;						// 已领取的宝箱
}
//道具使用数据
message toolsData           
{
	optional uint32 tools_id = 1;					// 道具ID
	optional uint32 bmark = 2;						// 道具标识 用于同一道具存在多个数量
	optional uint32 get_time = 3;					// 获得的时间
	optional uint32 last_time = 4;					// 上次使用时间
	optional uint32 use_times = 5;					// 上次使用的次数
	optional uint32 total_times = 6;				// 总使用次数
};
message ToolsInfo 
{
	repeated toolsData listTools = 1;
}
message VipInfo 
{
	optional int32 grade = 1;						// 等级
	optional int32 current = 2;						// 当前点数
	optional uint32 last_get = 3;					// 上次领取时间
	optional int32 last_levelup_award_level = 4;	// 上次领取升级奖励的等级
}
message LevelInfo 
{
	optional int32 level = 1;						// 等级
	optional int32 exp = 2;
	repeated int32 reaward_level = 3;				// 最大长度为168
}
message VipCard 
{
	optional uint32 tEndTime = 1;					// 截止时间
}
message BExtInfo 
{
	optional UserScoreAward scoreAward = 1;
	optional UserSign userSign = 2;
	optional UserExData userExData = 3;
	optional SpellCardInfo spellCard = 4;
	optional ToolsInfo toolsInfo = 5;
	optional VipInfo vipInfo = 6;
	optional LevelInfo levelInfo = 7;
	optional VipCard vipCard = 8;
}






