/////////////////////////////////////////////////////////////////
////
////			后台服务通讯
////
/////////////////////////////////////////////////////////////////
package ProtoCmd.Service;

// 枚举定义通讯协议号
enum ServiceCmd
{
	SC_BEGIN 		= 11;
	SC_KICK_USER 		= 12;		//踢玩家下线
	SC_QUERY_USER 		= 13; 		//查询个人信息
	SC_FREEZE_USER 		= 14;		//玩家封号与解封
	SC_SEND_SYSMAIL 	= 15;		//发送系统邮件
	SC_SERVER_STOP  	= 16;		//服务器维护安全关服
	SC_QUERY_ONLINEUSER 	= 17;		//查询在线玩家列表
	SC_QUERY_USEROPERHIS	= 18;		//查询玩家操作历史记录
	SC_QUERY_SERVERSTATUS	= 19;		//查询服务器状态
	SC_SEND_ANNOUNCEMENT	= 20;		//发送公告
	SC_BAN_SPEAK		= 21;		//禁言
	SC_ADD_GOLD		= 22;		//系统加钱(在线加钱,临时处理)
	SC_QUERY_INTERNALLOGIN	= 23;		//查询是否打开内部登录
	SC_SET_INTERALLOGIN	= 24;		//设置内部登录模式
	SC_SEND_ITEMMAIL	= 25;		//发送物品邮件(包含金币,五币,礼物,权贵等)
	SC_QUERY_FISH		= 26;		//查询养鱼
	SC_BAN_LOGIN_IP		= 27;		//封登录IP
	SC_TOTAL = 200;
}

enum CenterCmd
{
	CS_BEGIN	 	= 11;
	CS_CONNECT_ERROR	= 12;		//连接错误
	CS_ACCOUNT_ERROR 	= 13;		//账号错误
	CS_QUERY_UESR	 	= 14;		//返回查询
	CS_SERVER_STOP   	= 15;		//返回关服
	CS_KICK_USER	 	= 16;		//返回踢人
	CS_FREEZE_USER	 	= 17;		//返回封号
	CS_QUERY_ONLINEUSER 	= 18;		//返回在线列表
	CS_QUERY_USEROPERHIS	= 19;		//返回玩家操作历史记录
	CS_SEND_SYSMAIL		= 20;		//发送系统邮件
	CS_QUERY_SERVERSTATUS	= 21;		//返回服务器状态
	CS_SEND_ANNOUNCEMENT	= 22;		//公告返回
	CS_QUERY_INTERNALLOGIN  = 23;		//查询是否打开内部登录
	CS_SET_INTERALLOGIN	= 24;		//设置内部登录模式
	CS_SEND_ITEMMAIL	= 25;		//发送物品邮件返回
	CS_QUERY_FISH		= 26;		//返回养鱼
	CS_BAN_SPEAK		= 27;		//返回禁言
	CS_BAN_LOGIN_IP		= 28;		//封登录IP
	CS_TOTAL	 	= 100;
}

message Service_Test_S
{
	required string szAccount = 1;
	required bool	suc	  = 2;
}

// 结构定义通讯协议内容

///	请求踢人(暂时只有请求没有应答，玩家可能在不同网关上)
message Service_Kick_C
{
	required uint32 dwUserID = 1;	//	ID
}

message Service_Kick_S
{
	required bool	suc	= 1;	//
}

///	查询玩家信息
message Service_Query_C
{
	required string	szAccount = 1;	//帐户名字 
}

///	服务器反馈查询玩家信息
message Service_Query_S
{
	required uint32	dwUserID 	= 1;	//ID
	required string szAccount 	= 2;	//帐户
	required string szNickName 	= 3;	//昵称
	required string	szTelNum 	= 4;	//手机号码
	required string	szEmail		= 5;	//邮箱
	optional bool	isOnline	= 6;	//在线状态
	required bool	isFreeze	= 7;	//帐户是否冻结
	required string	szTrueName	= 8;	//真实姓名
	required string	szIdentity	= 9;	//身份证
	required uint32	sex		= 10;	//性别
	required uint32	dwAgentID	= 11;	//代理商ID
	required string	szCreateTime	= 12;	//创建时间
}

///	玩家封号
message	Service_Freeze_C
{
	required uint32 dwUserID  = 1;	//帐户ID
	required bool	isFreeze  = 2;	//true 是封号, false是解封
}

message Service_Freeze_S
{
	required bool	suc = 1;	//返回冻结
}

///	发送系统邮件
message Service_Send_SysMail_C
{
	required string szTitle   = 1;	//标题
	required string szContext = 2;	//内容
}

///	安全关服(只有命令没有结构部分
message Service_Send_CloseServer
{
	required bool close = 1;	//true 关 false 开
}


///	查询返回服务器状态
message Service_Query_ServerStatus_S
{
	required bool close = 1;	//true 关 false 开
}

// 在线玩家列表请求
message	Service_Query_OnlineUser_C
{
	required uint32 dwPageIndex = 1;	// 页面ID(启始1开始)
	required uint32 dwShowNum   = 2;	// 单个页面显示数量
}

message Service_OnlineUserInfo
{
	required string	strAccount 	= 1;	
	required uint32	dwUserID   	= 2;
	required string	strIP	   	= 3;
	required string strLoginTime	= 4;
}

//  在线玩家列表请求返回
message Service_Query_OnlineUser_S
{
	required uint32 startIndex = 1;		// 启始的记录索引总编号
	required uint32	showNum = 2;		// 现实数目
	required uint32 page = 3;		// 当前页面
	required uint32 pageTotal = 4;		// 总页面
	repeated Service_OnlineUserInfo	list = 5;	// 玩家信息数组
}

//  后台请求用户操作历史记录
message Service_Query_UseOperHis_C
{
	required uint32	dwUserID    = 1;	//用户ID
	required uint32 dwPageIndex = 2;	// 页面ID(启始1开始)
	required uint32 dwShowNum   = 3;	// 单个页面显示数量
}

message Service_UserOperHisInfo
{
	required string strTime = 1;		//时间
	required string content = 2;		//记录内容
}

//  服务器返回用户操作历史记录
message Service_Query_UseOperHis_S
{
	required uint32 dwUserID = 1;				// 用户ID
	required uint32 startIndex = 2;				// 启始的记录索引总编号
	required uint32	showNum = 3;				// 现实数目
	required uint32 page = 4;				// 当前页面
	required uint32 pageTotal = 5;				// 总页
	repeated Service_UserOperHisInfo listInfo = 6;		// 记录数组
}

//  系统公告
message Service_Send_AnnounceMent_C
{
	required string	content = 1;				// 公告内容(200汉字)
	required uint32 dwRepeat = 2;				// 重复次数
	required uint32 dwInterval = 3;				// 间隔时间(单位秒)
}

// 禁言
message Service_BanSpeak_C
{
	required uint32 dwUserID  = 1;	//帐户ID
	required bool	isFreeze  = 2;	//true 是封号, false是解封
}
// 禁言返回
message Service_BanSpeak_S
{
	required bool	suc = 1;	//是否成功
}

// 在线加钱
message Service_OnlineAddGold_C
{
	required uint32 dwUserID = 1;	//角色ID
	required uint32 dwAddGold = 2;	//加的钱
}

// 加钱返回
message Service_OnlineAddGold_S
{
	required bool suc = 1;		//是否成功
}

// 后台查询内部登录模式 
// 服务器返回内部登录模式
message Service_QueryInternalLogin_S
{
	required bool isOpen = 1;	// true说明是打开状态 false是没有打开
}

// 后台设置内部登录模式
message Service_SetInternalLogin_C
{
	required bool bOpen = 1;	// true 说明是要打开 false 说明是要关闭
}

// 后台设置内部登录模式返回
message Service_SetInternalLogin_S
{
	required bool isOpen = 1;	// true说明是打开状态 false是没有打开
}

// 后台物品邮件(发送物品邮件(包含金币,五币,礼物,权贵等))
message Service_ItemMail_C
{
	repeated uint32 userID = 1;	// 角色ID(最多10个)
	required string title = 2;	// 标题(30汉字内)
	required string context = 3;	// 内容(50汉字内)
	optional uint32 itemType = 4;	// 物品类型 (1 金币 2 五币 3积分 4 礼物 5 权贵 6 宝石)
	optional uint32 itemValue = 5;	// 物品的数值 或者 ID (货币就是数值 物品就是ID)
	optional uint32 itemNum	= 6;	// 数量
}

// 物品邮件
message Service_ItemMail_S
{
	required bool suc = 1;		// 是否成功
}

//
message Service_Fish_C
{
	required uint32 userID = 1;	// 角色ID
}

message FishInfo
{
	required string date = 1;	// 日期
	required uint32 itemID = 2;	// 物品ID
	required string name = 3;	// 物品名称
	required uint32 giveID = 4;	// 给予者的ID
}

//
message Service_Fish_S
{
	required uint32 userID = 1;	// 角色ID
	repeated FishInfo fishList = 2;	// 鱼列表
}

//
message Service_BanIP_C
{
	required string ip	= 1;	//ip地址
	required bool isBan	= 2;	//是封还是解
}

message Service_BanIP_S
{
	required bool	suc = 1;	//是否成功
}
